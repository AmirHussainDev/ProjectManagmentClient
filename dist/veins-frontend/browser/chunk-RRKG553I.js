import{D as M,I as b,S,a as h,b as w,e as C}from"./chunk-WFCTZNAN.js";var u=function(e){return e[e.Up=1]="Up",e[e.Down=3]="Down",e[e.Right=6]="Right",e[e.Left=8]="Left",e[e.UpMirrored=2]="UpMirrored",e[e.DownMirrored=4]="DownMirrored",e[e.LeftMirrored=5]="LeftMirrored",e[e.RightMirrored=7]="RightMirrored",e[e.Default=0]="Default",e[e.NotJpeg=-1]="NotJpeg",e[e.NotDefined=-2]="NotDefined",e}(u||{}),_,s=class{};_=s;s.getOrientation=e=>new Promise((i,o)=>{try{let a=new FileReader;a.onload=()=>{let n=new DataView(a.result);if(!n.byteLength||n.getUint16(0,!1)!==65496)return i(u.NotDefined);let c=n.byteLength,t=2;for(;t<c;){let l=n.getUint16(t,!1);if(t+=2,l===65505){if(n.getUint32(t+=2,!1)!==1165519206)return i(u.NotJpeg);let m=n.getUint16(t+=6,!1)===18761;t+=n.getUint32(t+4,m);let g=n.getUint16(t,m);t+=2;for(let r=0;r<g;r++)if(n.getUint16(t+r*12,m)===274)return i(n.getUint16(t+r*12+8,m))}else{if((l&65280)!==65280)break;t+=n.getUint16(t,!1)}}return i(u.NotJpeg)},a.readAsArrayBuffer(e)}catch{return o(u.Default)}});s.uploadFile=(e,i=!0,o=!1)=>new Promise(function(a,n){let c=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),t=/iPad|iPhone|iPod/i.test(navigator.userAgent);Promise.resolve(c||t).then(l=>l?s.generateUploadInputNative(window.document,i,o):s.generateUploadInputRenderer(e,i,o)).then(l=>{let m=l?Array.from(l):[],g=m.map(p=>s.getOrientation(p)),r=m.map(p=>s.fileToDataURL(p)),d=[];Promise.all(g).then(p=>(d=p,Promise.all(r))).then(p=>{let f=p.map((v,x)=>({image:v.dataUrl,orientation:d[x],fileName:v.fileName}));a(i?f:f[0])})}).catch(l=>n(l))});s.fileToDataURL=e=>new Promise((i,o)=>{let a=new FileReader;a.onload=n=>{i({dataUrl:n.target.result,fileName:e.name})};try{a.readAsDataURL(e)}catch(n){o(`ngx-image-compress - probably no file have been selected: ${n}`)}});s.generateUploadInputRenderer=(e,i=!0,o=!1)=>{let a=!1;return new Promise((n,c)=>{let t=e.createElement("input");e.setStyle(t,"display","none"),e.setProperty(t,"type","file"),e.setProperty(t,"accept","image/*"),i&&e.setProperty(t,"multiple","true"),e.listen(t,"click",l=>{l.target.value=""}),e.listen(t,"change",l=>{a=!0;let m=l.target.files;n(m)}),o&&window.addEventListener("focus",()=>{setTimeout(()=>{a||c(new Error("file upload on blur - no file selected"))},300)},{once:!0}),t.click()})};s.generateUploadInputNative=(e,i=!0,o=!1)=>{let a=!1;return new Promise((n,c)=>{let t=e.createElement("input");t.id="upload-input"+new Date,t.style.display="none",t.setAttribute("type","file"),t.setAttribute("accept","image/*"),i&&t.setAttribute("multiple","true"),e.body.appendChild(t),t.addEventListener("change",()=>{a=!0,n(t.files),e.body.removeChild(e.getElementById(t.id))},{once:!0}),o&&window.addEventListener("focus",()=>{setTimeout(()=>{!a&&e.getElementById(t.id)&&(c(new Error("file upload on blur - no file selected")),e.body.removeChild(e.getElementById(t.id)))},300)},{once:!0}),t.click()})};s.compress=(e,i,o,a=50,n=50,c=0,t=0)=>new Promise(function(l,m){n=n/100,a=a/100;let g=new Image;g.onload=()=>{let r=o.createElement("canvas"),d=r.getContext("2d");if(!d)return m("No canvas context available");let p=g.naturalWidth,f=g.naturalHeight;if(!CSS.supports("image-orientation","from-image")&&(i===u.Right||i===u.Left)){let F=p;p=f,f=F}let v=c?c/p:1,x=t?t/f:1;a=Math.min(a,v,x),r.width=p*a,r.height=f*a;let y=Math.PI/180;CSS.supports("image-orientation","from-image")||i===u.Up?d.drawImage(g,0,0,r.width,r.height):i===u.Right?(d.save(),d.rotate(90*y),d.translate(0,-r.width),d.drawImage(g,0,0,r.height,r.width),d.restore()):i===u.Left?(d.save(),d.rotate(-90*y),d.translate(-r.width,0),d.drawImage(g,0,0,r.height,r.width),d.restore()):i===u.Down?(d.save(),d.rotate(180*y),d.translate(-r.width,-r.height),d.drawImage(g,0,0,r.width,r.height),d.restore()):d.drawImage(g,0,0,r.width,r.height);let I=e.substr(5,e.split(";")[0].length-5),U=r.toDataURL(I,n);l(U)},g.onerror=r=>m(r),g.src=e});s.byteCount=e=>encodeURI(e).split(/%..|./).length-1;s.getImageMaxSize=(e,i,o,a=!1)=>C(void 0,null,function*(){let c=m=>(m/1024/1024).toFixed(2);i&&console.debug("NgxImageCompress - Opening upload window");let t=yield s.uploadFile(o,!1,a),l;for(let m=0;m<10;m++){let g=s.byteCount(t.image);l=yield s.compress(t.image,t.orientation,o,50,100);let r=s.byteCount(l);if(console.debug("NgxImageCompress -","Compression from",c(g),"MB to",c(r),"MB"),r>=g)throw m===0?(i&&console.debug("NgxImageCompress -","File can't be reduced at all - returning the original",c(g),"MB large"),w(h({},t),{image:l})):(i&&console.debug("NgxImageCompress -","File can't be reduced more - returning the best we can, which is ",c(g),"MB large"),w(h({},t),{image:l}));if(r<e*1024*1024)return i&&console.debug("NgxImageCompress -","Here your file",c(r),"MB large"),w(h({},t),{image:l});if(m===9)throw i&&console.debug("NgxImageCompress -","File can't reach the desired size after",10,"tries. Returning file ",c(g),"MB large"),w(h({},t),{image:l});i&&console.debug("NgxImageCompress -","Reached",c(r),"MB large. Trying another time after",m+1,"times"),t.image=l}throw i&&console.debug("NgxImageCompress - Unexpected error"),{}});var Z=(()=>{class e{constructor(o){this.DOC_ORIENTATION=u,this.render=o.createRenderer(null,null)}byteCount(o){return s.byteCount(o)}getOrientation(o){return s.getOrientation(o)}uploadFile(){return s.uploadFile(this.render,!1)}uploadMultipleFiles(){return s.uploadFile(this.render,!0)}uploadFileOrReject(){return s.uploadFile(this.render,!1,!0)}uploadMultipleFilesOrReject(){return s.uploadFile(this.render,!0,!0)}compressFile(o,a,n=50,c=50,t=0,l=0){return s.compress(o,a,this.render,n,c,t,l)}uploadAndGetImageWithMaxSize(o=1,a=!1,n=!1){return s.getImageMaxSize(o,a,this.render,n).then(c=>c.image).catch(c=>{throw c.image})}uploadAndGetImageWithMaxSizeAndMetas(o=1,a=!1,n=!1){return s.getImageMaxSize(o,a,this.render,n)}}return e.\u0275fac=function(o){return new(o||e)(b(S))},e.\u0275prov=M({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();export{Z as a};
